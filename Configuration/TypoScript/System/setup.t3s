lib.stdheader {
	3.headerClass.cObject {
		30 = TEXT
		30 {
			field = header_layout
			noTrimWrap = | h||
			if {
				isTrue.field = header_as_class

				isTrue.if {
					isTrue.field = header_layout
				}
			}
		}
	}

	10 {
		1.dataWrap.stdWrap.override = <header{register:headerClass}>|</header>
		1.dataWrap.stdWrap.override.if {
			isTrue.field = header_as_class
		}

		2.dataWrap.stdWrap < .1.dataWrap.stdWrap
		3.dataWrap.stdWrap < .1.dataWrap.stdWrap
		4.dataWrap.stdWrap < .1.dataWrap.stdWrap
		5.dataWrap.stdWrap < .1.dataWrap.stdWrap
	}
}


# tt_content.stdWrap.innerWrap.cObject = CASE
# tt_content.stdWrap.innerWrap.cObject {
# #   key.field = section_frame

# 	78 =< tt_content.stdWrap.innerWrap.cObject.default
# 	78.20.10.value = csc-default grey-border

# 	79 =< tt_content.stdWrap.innerWrap.cObject.default
# 	79.20.10.value = csc-default teaser

# 	80 =< tt_content.stdWrap.innerWrap.cObject.default
# 	80.20.10.value = csc-default no-shadow

# 	81 =< tt_content.stdWrap.innerWrap.cObject.default
# 	81.20.10.value = csc-default arrowbutton
# }

# tt_content.stdWrap.outerWrap < tt_content.stdWrap.innerWrap
# tt_content.stdWrap.innerWrap.cObject = CASE
# tt_content.stdWrap.innerWrap.cObject {
# 	default {
# 		10.cObject.default.value = <div
# 	}

#   key.field = layout

#   1 < .default
#   1 {
#   	20.10.value = csc-indent csc-indent-normal
#   }

#   2 < .default
#   2 {
#   	20.10.value = csc-indent csc-indent-null
#   }

#   default {
#   	20.10.value = csc-indent csc-indent-small
#   }
# }